name: ROS2 CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build_and_test:
    runs-on: ubuntu-22.04
    container:
      image: ros:humble

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Create ROS workspace
      run: |
        mkdir -p ${{ github.workspace }}/ros2_wave_ws/src
        # Move our checked out code to the right place
        mv ${{ github.workspace }}/* ${{ github.workspace }}/ros2_wave_ws/src/ || true
        # Move .github folder
        mv ${{ github.workspace }}/.github ${{ github.workspace }}/ros2_wave_ws/src/ || true
        # Move .pre-commit-config.yaml
        mv ${{ github.workspace }}/.pre-commit-config.yaml ${{ github.workspace }}/ros2_wave_ws/src/ || true
        # Move .pylintrc
        mv ${{ github.workspace }}/.pylintrc ${{ github.workspace }}/ros2_wave_ws/src/ || true

    # Checkout generate_parameter_library
    - name: Clone generate_parameter_library
      working-directory: ${{ github.workspace }}/ros2_wave_ws/src
      run: |
        git clone https://github.com/picknikrobotics/generate_parameter_library.git

    - name: Install dependencies
      working-directory: ${{ github.workspace }}/ros2_wave_ws
      run: |
        apt-get update
        apt-get install -y python3-pip
        pip3 install pytest pytest-cov flake8 black isort pre-commit
        rosdep update
        rosdep install --from-paths src --ignore-src -r -y

    - name: Run pre-commit checks
      working-directory: ${{ github.workspace }}/ros2_wave_ws/src/ros2-dev-challenge
      run: |
        pre-commit install
        pre-commit run --all-files

    - name: Build
      working-directory: ${{ github.workspace }}/ros2_wave_ws
      run: |
        . /opt/ros/humble/setup.bash
        colcon build
        
    - name: Run tests
      working-directory: /ros2_wave_ws
      run: |
        . /opt/ros/humble/setup.bash
        . install/setup.bash
        colcon test --packages-select ros2_wave_pkg
        colcon test-result --verbose

    - name: Run linting
      run: |
        flake8 src/ros2_wave_pkg
        black --check src/ros2_wave_pkg
        isort --check-only src/ros2_wave_pkg